% Add your standard header here.
%
-module(class_).


% Determines what are the mother classes of this class (if any):
-define( wooper_superclasses, [] ).


% Parameters taken by the constructor ('construct').
-define( wooper_construct_parameters, ).


% Declaring all variations of WOOPER standard life-cycle operations:
% (template pasted, two replacements performed to update arities)
-define( wooper_construct_export, new/X, new_link/X,
		synchronous_new/X, synchronous_new_link/X,
		synchronous_timed_new/X, synchronous_timed_new_link/X,
		remote_new/Y, remote_new_link/Y, remote_synchronous_new/Y,
		remote_synchronous_new_link/Y, remote_synchronous_timed_new/Y,
		remote_synchronous_timed_new_link/Y, construct/Y, destruct/1 ).


% Member method declarations.
-define( wooper_method_export, ).


% Static method declarations.
-define( wooper_static_method_export, ).


% Allows to define WOOPER base variables and methods for that class:
-include("wooper.hrl").


% Constructs a new .
construct( State, ?wooper_construct_parameters ) ->

	% First the direct mother classes:
	XState = class_:construct( State,  ),

	% Then the class-specific attributes:
	setAttributes( XState, [
		 {,},
		 {,} ] ).



destruct( State ) ->

	State.

	io:format( "Deleting cat ~w! (overridden destructor)~n", [ self() ] ),



% Member method section.


% Static method section.


% Helper functions section.
