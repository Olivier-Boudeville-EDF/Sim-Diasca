/*
 * Most simple fragment shader.
 *
 * Each fragment shader instance is to transform exactly one fragment (as
 * generated by the rasterization) into another that is based on a series of
 * colors and a single depth value.
 *
 * At least generally, this transformation should behave as a pure
 * (context-free) function.
 *
 * Refer to https://www.khronos.org/opengl/wiki/Fragment_Shader for more
 * information.
 *
 */


/*
 * The GLSL version now matches the one of OpenGL (3.3);
 * using the (default) core profile.
 *
 */
#version 330 core



// User-defined output data (no layout specified here):
out vec3 my_color;


void main()
{

	// For all fragments, the output color will be the "Myriad blue":
	my_color = vec3(0.05, 0.2, 0.67);

}